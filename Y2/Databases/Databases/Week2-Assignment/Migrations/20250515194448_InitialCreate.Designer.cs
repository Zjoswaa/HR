// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Week2_Assignment.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250515194448_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Department", b =>
                {
                    b.Property<int>("Dnumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Dnumber"));

                    b.Property<string>("Dname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Mgr_ssn")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Mgr_start_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Dnumber");

                    b.HasIndex("Mgr_ssn");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Dependent", b =>
                {
                    b.Property<int>("Essn")
                        .HasColumnType("integer");

                    b.Property<string>("Dependent_name")
                        .HasColumnType("text");

                    b.Property<DateTime>("Bdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<char>("Sex")
                        .HasColumnType("character(1)");

                    b.HasKey("Essn", "Dependent_name");

                    b.ToTable("Dependents");
                });

            modelBuilder.Entity("DeptLocations", b =>
                {
                    b.Property<int>("Dno")
                        .HasColumnType("integer");

                    b.Property<string>("Dlocation")
                        .HasColumnType("text");

                    b.HasKey("Dno", "Dlocation");

                    b.ToTable("DeptLocations");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.Property<int>("Ssn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Ssn"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Bdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Dno")
                        .HasColumnType("integer");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<char>("Minit")
                        .HasColumnType("character(1)");

                    b.Property<int>("Salary")
                        .HasColumnType("integer");

                    b.Property<char>("Sex")
                        .HasColumnType("character(1)");

                    b.Property<int>("Super_ssn")
                        .HasColumnType("integer");

                    b.HasKey("Ssn");

                    b.HasIndex("Dno");

                    b.HasIndex("Super_ssn");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Project", b =>
                {
                    b.Property<int>("Pno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Pno"));

                    b.Property<int>("Dno")
                        .HasColumnType("integer");

                    b.Property<string>("Plocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Pno");

                    b.HasIndex("Dno");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("WorksOn", b =>
                {
                    b.Property<int>("Essn")
                        .HasColumnType("integer");

                    b.Property<int>("Pno")
                        .HasColumnType("integer");

                    b.Property<int>("Hours")
                        .HasColumnType("integer");

                    b.HasKey("Essn", "Pno");

                    b.HasIndex("Pno");

                    b.ToTable("WorksOn");
                });

            modelBuilder.Entity("Department", b =>
                {
                    b.HasOne("Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("Mgr_ssn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Dependent", b =>
                {
                    b.HasOne("Employee", "Employee")
                        .WithMany("Dependents")
                        .HasForeignKey("Essn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DeptLocations", b =>
                {
                    b.HasOne("Department", "Department")
                        .WithMany("Locations")
                        .HasForeignKey("Dno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.HasOne("Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("Dno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Employee", "Supervisor")
                        .WithMany("Subordinates")
                        .HasForeignKey("Super_ssn")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Project", b =>
                {
                    b.HasOne("Department", "Department")
                        .WithMany("Projects")
                        .HasForeignKey("Dno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("WorksOn", b =>
                {
                    b.HasOne("Employee", "Employee")
                        .WithMany("WorksOn")
                        .HasForeignKey("Essn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project", "Project")
                        .WithMany("WorksOn")
                        .HasForeignKey("Pno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Locations");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.Navigation("Dependents");

                    b.Navigation("Subordinates");

                    b.Navigation("WorksOn");
                });

            modelBuilder.Entity("Project", b =>
                {
                    b.Navigation("WorksOn");
                });
#pragma warning restore 612, 618
        }
    }
}
